*  https://sites.google.com/view/textgraphs2020
  *  http://cognitiveai.org/explanationbank/
  *  https://github.com/cognitiveailab/tg2020task

*  https://competitions.codalab.org/competitions/23615


## Important dates : 

2020-03-06: Training data release
2020-04-06: Test data release; Evaluation start
# NOW
2020-09-21: Evaluation end (specifically : Sept. 22, 2020, midnight UTC)
2020-10-02: System description paper deadline
2020-10-18: Deadline for reviews of system description papers
2020-10-25: Author notifications
2020-11-01: Camera-ready description paper deadline
2020-12-13: TextGraphs-14 workshop

To encourage transparency and replicability, all teams must publish their : 
  code, 
  tuning procedures, and 
  instructions for running their models with their submission of shared task papers.

*   Train = 2207 examples
*   Dev   =  496 examples
*   Test  = 1664 examples

## Scores

(2020-09-02)
  Username	Score   
1	alvysinger	0.5815
2	webbley	    0.5809
3	aisys	      0.5233


## Installation

git clone https://github.com/mdda/worldtree_corpus.git
cd worldtree_corpus  # i.e. the REPO root directory
#git branch -a
git checkout -b textgraphs_2020 origin/textgraphs_2020

./run_setup.bash
./run_baseline.bash
# train.baseline.txt => 0.2469 MAP locally
# dev.baseline.txt   => 0.2550 MAP locally
# test.baseline.txt  => 0 MAP

## ...

*  Need a lemmatizer to correctly resolve all 'node words' in the explanations
   *  Good resource : https://www.machinelearningplus.com/nlp/lemmatization-examples-python/
   
*  Can use this to identify nodes in Q&s 


git config --global credential.helper cache
git config --global credential.helper 'cache --timeout=36000'  # 10hrs


